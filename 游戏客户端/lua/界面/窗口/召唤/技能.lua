local 技能库 = require('数据/技能库')

local 召唤技能栏 = 窗口层:创建我的窗口('召唤技能栏', 0, 0, 547, 473)
function 召唤技能栏:初始化()
    self:置精灵(
        self:取老红木窗口(
            self.宽度,
            self.高度,
            '技能',
            function()
                self:取拉伸图像_宽高('gires4/经典红木/元件按钮/列表框底图.tcp', 487, 80):显示(28, 40)
                self:取拉伸图像_宽高('ui/btl.png', 487, 23):显示(28, 40)
                __res.JMZ:取图像('天生技能'):显示(238, 42)
                self:取拉伸图像_宽高('ui/btl.png', 487, 23):显示(28, 125)
                self:取拉伸图像_宽高('gires4/经典红木/元件按钮/列表框底图.tcp', 225, 290):显示(292, 146)
                __res.JMZ:取图像('后天技能'):显示(238, 127)
            end
        )
    )
    self:置坐标((引擎.宽度 - self.宽度) // 2, (引擎.高度 - self.高度) // 2)
end

local 天生技能 = 召唤技能栏:创建网格('天生技能',150,65,500,80)
do
    function 天生技能:初始化()
        self:创建格子(54, 54, 1, 1, 1, 5)
        self.high_light_frame = __res:getspr('gires2/dialog/high_light_frame.tcp'):置拉伸(54, 54)--白色选中框
        self.selectframe = __res:getspr('gires2/dialog/selectframe.tcp'):置拉伸(54, 54)---红色选中框
    end
    function 天生技能:清空()
        self:删除格子()
        self:创建格子(54, 54, 1, 1, 1, 5)
        self.n = 0
    end
    function 天生技能:子显示(x, y, i)
        if self[i].state then
            self[i].state:显示(x + 2, y )
        end
    end
    function 天生技能:添加技能(t,默认)
        self.n = self.n + 1
        local 格子 = self[self.n]
        格子.state = __res:getspr('magic/icon/%04d.png', t.图标):置拉伸(50, 50)
        格子.name = t.name
        格子:置可见(true, true)
    end

    function 天生技能:获得鼠标(x, y, i)
        if not 鼠标层.附加 and self[i].name then
            鼠标层:坐标提示(x - 5, y + 35, '#Y'..self[i].name..'(天生技能)')
        end
    end

    function 天生技能:左键弹起(x, y, i)
        if not 鼠标层.附加 and self[i].name then
            召唤技能栏.技能介绍:清空()
            local t, d = __rpc:角色_查看指定召唤兽技能(召唤技能栏.召唤,self[i].name)
            召唤技能栏.技能介绍:置文本(self[i].name.."\n"..(d or "请截图联系管理员"))
            召唤技能栏.选中 = nil
        end
    end
end
    
function 召唤技能栏:置天生技能(t)
    召唤技能栏.天生技能:清空()
   
    for k, v in ipairs(t) do
        if 技能库[v] == nil then
            -- print(v)
        elseif 技能库[v].图标 == nil then
            print(技能库[v].名称..'图标不存在')
            技能库[v].图标 = 0891
        end
        召唤技能栏.天生技能:添加技能({ name = 技能库[v].名称 , 图标 = 技能库[v].图标})
    end
end
local 佩戴网格 = {}
local 坐标 = {x = {134,69,52,69,136,204,221,204,134} , y = {180,205,272,339,356,339,272,205,272}}
do
    for i=1,9 do
        佩戴网格[i] = 召唤技能栏:创建技能网格('佩戴网格'..i, 坐标.x[i], 坐标.y[i], 50, 50)
        佩戴网格[i].初始化 = function(self)
            self:创建格子(50, 50, 0, 0, 1, 1)
        end
        -- 佩戴网格[i].获得鼠标 = function (self ,x, y)
        --     print(self.数据[i])
        --     鼠标层:坐标提示(x - 5, y + 35, '技能名称：')
        -- end
        -- 佩戴网格[i].左键弹起 = function(self, x, y, i)
        --     if self.数据[i] then
        --         -- local t, d = __rpc:角色_查看对象(召唤技能栏.召唤)
        --     end
        -- end
        -- if gge.platform == 'Windows' then
        --     佩戴网格[i].左键弹起 = function(self, x, y, i)
        --         self:右键弹起(x, y, i)
        --     end
         --end
    end
end

local 技能介绍 = 召唤技能栏:创建文本("技能介绍", 300, 155, 210, 270)

function 召唤技能栏:置技能(r)
    for i=1,9 do
        佩戴网格[i]:清空()
        佩戴网格[i].获得鼠标 = function (self ,x, y)
        end
    end
    local 开启 = 召唤技能栏.召唤兽数据.技能格子.已开
    local 技能 = 召唤技能栏.召唤兽数据.后天技能
    
    for i = 1, #召唤技能栏.召唤兽数据.后天技能 do --佩戴技能
        if 技能库[召唤技能栏.召唤兽数据.后天技能[i]] == nil then
            界面层:添加聊天('技能：'..召唤技能栏.召唤兽数据.后天技能[i]..'#r不存在，请截图给管理员！')
            召唤技能栏.召唤兽数据.后天技能[i] = "帐饮东都"
        end
        if 技能库[召唤技能栏.召唤兽数据.后天技能[i]].图标 == nil then
            界面层:添加聊天('技能：'..召唤技能栏.召唤兽数据.后天技能[i]..'#r图标不存在，请截图给管理员！')
            技能库[召唤技能栏.召唤兽数据.后天技能[i]].图标 = 0891
        end
        佩戴网格[i]:添加(1 , {图标=技能库[召唤技能栏.召唤兽数据.后天技能[i]].图标})
        佩戴网格[i].获得鼠标 = function (self ,x, y)
            if 召唤技能栏.召唤兽数据 then
                鼠标层:坐标提示(x - 5, y + 35, '#Y'..技能库[召唤技能栏.召唤兽数据.后天技能[i]].名称..'(普通技能)')
            end
        end
        佩戴网格[i].左键弹起= function (self ,x, y)
            召唤技能栏.技能介绍:清空()
            if 召唤技能栏.召唤兽数据 and 召唤技能栏.召唤兽数据.后天技能[i] and 技能库[召唤技能栏.召唤兽数据.后天技能[i]] and 技能库[召唤技能栏.召唤兽数据.后天技能[i]].名称 then
                local t, d = __rpc:角色_查看指定召唤兽技能(召唤技能栏.召唤,技能库[召唤技能栏.召唤兽数据.后天技能[i]].名称)
                if 召唤技能栏.技能介绍 and 召唤技能栏.召唤兽数据 and 召唤技能栏.召唤兽数据.后天技能 and 召唤技能栏.召唤兽数据.后天技能[i] then
                    if d then
                        召唤技能栏.技能介绍:置文本(召唤技能栏.召唤兽数据.后天技能[i].."\n"..(d or "获取介绍错误"))
                    else
                        召唤技能栏.技能介绍:置文本(召唤技能栏.召唤兽数据.后天技能[i].."\n".."获取介绍错误")
                    end
                end
                召唤技能栏.选中 = 召唤技能栏.召唤兽数据.后天技能[i]
                召唤技能栏.选中编号 = i
            end
        end 
    end
    if 召唤技能栏.召唤兽数据.技能格子.已开 > #技能 then
        for i=#技能+1,召唤技能栏.召唤兽数据.技能格子.已开 do
            佩戴网格[i]:添加(1 , {图标=9999})     
        end
    end

    if 召唤技能栏.召唤兽数据.技能格子.封印 then
        for i = 1, 召唤技能栏.召唤兽数据.技能格子.封印 do --显示未开启
            佩戴网格[i + 召唤技能栏.召唤兽数据.技能格子.已开]:添加(1 , {图标=7777})
            佩戴网格[i + 召唤技能栏.召唤兽数据.技能格子.已开].获得鼠标 = function (self ,x, y)
                鼠标层:坐标提示(x, y, '')
                鼠标层:坐标提示(x - 5, y + 35, '#R技能格(封印)\n#Y获得技能格方式:\n1、召唤兽点化后，每次升级有几率获得(封印状态);')
            end
        end
    end

    if 召唤技能栏.召唤兽数据.技能格子.未开启 then
        for i = 1, 召唤技能栏.召唤兽数据.技能格子.未开启 do --显示未开启
            佩戴网格[i + 召唤技能栏.召唤兽数据.技能格子.已开+召唤技能栏.召唤兽数据.技能格子.封印]:添加(1 , {图标=8888})
            佩戴网格[i + 召唤技能栏.召唤兽数据.技能格子.已开+召唤技能栏.召唤兽数据.技能格子.封印].获得鼠标 = function (self ,x, y)
                鼠标层:坐标提示(x, y, '')
                鼠标层:坐标提示(x - 5, y + 35, '#R技能格(未获得)\n#Y获得技能格方式:\n1、召唤兽点化后，每次升级有几率获得(封印状态);\n2、召唤兽点化后，使用提炼过的聚魄丹时有几率获得;\n3、召唤兽启灵时，有几率获得(封印状态)\n4、在木息(蓬莱瀛洲，52,42)处使用积分和金钱兑换有几率获得(封印状态);\n5、召唤兽点化后，使用一定数量的渡玄丹可获得;')
            end
        end
    end
    if 召唤技能栏.召唤兽数据.类型 > 5 then
        if 召唤技能栏.召唤兽数据.神兽技能 and 召唤技能栏.召唤兽数据.神兽技能 ~= 0 then
            if 技能库[召唤技能栏.召唤兽数据.神兽技能] == nil then
                界面层:添加聊天('技能：'..召唤技能栏.召唤兽数据.神兽技能..'#R技能不存在，请截图给管理员！')
                召唤技能栏.召唤兽数据.神兽技能 = "帐饮东都"
            end
            if 技能库[召唤技能栏.召唤兽数据.神兽技能].图标 == nil then
                界面层:添加聊天('技能：'..召唤技能栏.召唤兽数据.神兽技能..'#R图标不存在，请截图给管理员！')
                技能库[召唤技能栏.召唤兽数据.神兽技能].图标 = 0891
            end
            佩戴网格[9]:添加(1 , {图标=技能库[召唤技能栏.召唤兽数据.神兽技能].图标})
            佩戴网格[9].获得鼠标 = function (self ,x, y)
                if 召唤技能栏.召唤兽数据 then
                    鼠标层:坐标提示(x - 5, y + 35, '#Y'..技能库[召唤技能栏.召唤兽数据.神兽技能].名称..'(神兽技能)')
                end
            end
            佩戴网格[9].左键弹起= function (self ,x, y)
                召唤技能栏.技能介绍:清空()
                if 召唤技能栏.召唤兽数据 and 召唤技能栏.召唤兽数据.神兽技能 and 召唤技能栏.召唤兽数据.神兽技能 ~= 0 and 技能库[召唤技能栏.召唤兽数据.神兽技能] then
                    local t, d = __rpc:角色_查看指定召唤兽技能(召唤技能栏.召唤,技能库[召唤技能栏.召唤兽数据.神兽技能].名称)
                    if 召唤技能栏.召唤兽数据 then
                        if d then
                            召唤技能栏.技能介绍:置文本(技能库[召唤技能栏.召唤兽数据.神兽技能].名称.."\n"..(d or "获取介绍错误"))
                        else
                            召唤技能栏.技能介绍:置文本(技能库[召唤技能栏.召唤兽数据.神兽技能].名称.."\n".."获取介绍错误")
                        end
                    end
                    召唤技能栏.选中 = 技能库[召唤技能栏.召唤兽数据.神兽技能].名称
                end
            end 
        else
            佩戴网格[9]:添加(1 ,{图标=9999})
        end
    else
        佩戴网格[9]:清空()
    end
end

function 窗口层:打开召唤技能(nid)
    
    召唤技能栏:置可见(not 召唤技能栏.是否可见)
    if not 召唤技能栏.是否可见 then
        return
    end
    召唤技能栏.召唤 = nid
    召唤技能栏.选中 = nil
    召唤技能栏.选中编号 = nil
    召唤技能栏.召唤兽数据 = nil
    local t, d = __rpc:角色_查看对象(nid)
    if not d then
        召唤技能栏:置可见(false)
        return
    end
    
    召唤技能栏:置天生技能(d.天生技能)
    召唤技能栏.技能介绍:清空()
    召唤技能栏.召唤兽数据 = d
    召唤技能栏:置技能(d)
    self:重新打开召唤抗性(nid)
end

function 窗口层:重新打开召唤技能(nid)
    for i = 1, 9 do
        佩戴网格[i]:清空()
    end
    召唤技能栏:置可见(false)
end


召唤技能栏:创建关闭按钮(x,y)
local 支援列表 = 召唤技能栏:创建红木小按钮('支援列表按钮',47,410,'支援列表',60)
local 删除技能 = 召唤技能栏:创建红木小按钮('删除技能按钮',215,410,'删除技能',60)

function 删除技能:左键弹起()
    if not 召唤技能栏.选中 or  not 召唤技能栏.召唤 then
        窗口层:提示窗口('#Y请选择你要删除的技能。')
    else
        if 窗口层:确认窗口('#Y你确定要要删除#R%s#Y技能吗，删除后无法找回，请谨慎操作？'
                , (召唤技能栏.选中编号 and 召唤技能栏.召唤兽数据.后天技能[召唤技能栏.选中编号] and 召唤技能栏.召唤兽数据.后天技能[召唤技能栏.选中编号] or 召唤技能栏.选中)) then
            local t = __rpc:角色_删除指定召唤兽技能(召唤技能栏.召唤,召唤技能栏.选中,召唤技能栏.选中编号)
            if type(t) == "string" then
                窗口层:提示窗口(t)
            elseif t then
                local nid = 召唤技能栏.召唤
                local t, d = __rpc:角色_查看对象(nid)
                if not d then
                    召唤技能栏:置可见(false)
                    return
                end
                召唤技能栏:置天生技能(d.天生技能)
                召唤技能栏.技能介绍:清空()

                召唤技能栏.召唤兽数据 = d
                召唤技能栏:置技能()
                窗口层:重新打开召唤抗性(nid)
            end
        end
    end
end

function 支援列表:左键弹起()
    窗口层:打开支援列表()
end

return 召唤技能栏
