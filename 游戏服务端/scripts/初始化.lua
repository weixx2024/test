--print('脚本初始化')
local 相克 = { 金 = '木', 木 = '土', 水 = '火', 火 = '金', 土 = '水' }
function 取五行属性(目标)
    local 五行={}
    for i, v in ipairs { '金', '木', '水', '火', '土' } do
        五行[v]=目标[v]/100
    end
    return 五行
end

function 验证数字(n)
    if type(n) ~= "number" or math.abs(n) ~= n or math.floor(n) ~= n or n < 0 or n > 9999 then
        return false
    end
    return true
end

function 取五行强克(目标)
    local 五行={}
    for i, v in ipairs { '强力克金', '强力克木', '强力克水', '强力克火', '强力克土' } do
        五行[v]=目标.抗性[v]/100+目标.增加强克效果/100
    end
    return 五行
end

function 取五行克制(攻击方五行,挨打方五行)
    local 攻击方结果=0
    local 挨打方结果=0
    if 攻击方五行.金~=nil and 攻击方五行.金~= 0 then
        if 挨打方五行.木~=nil and 挨打方五行.木~=0 then
            攻击方结果=攻击方结果+攻击方五行.金*挨打方五行.木
        end
        if 挨打方五行.火~=nil and 挨打方五行.火~=0 then
            挨打方结果=挨打方结果+挨打方五行.火*攻击方五行.金
        end
    end
    if 攻击方五行.木~=nil and 攻击方五行.木~= 0 then
        if 挨打方五行.土~=nil and 挨打方五行.土~=0 then
            攻击方结果=攻击方结果+攻击方五行.木*挨打方五行.土
        end
        if 挨打方五行.金~=nil and 挨打方五行.金~=0 then
            挨打方结果=挨打方结果+挨打方五行.金*攻击方五行.木
        end
    end
    if 攻击方五行.水~=nil and 攻击方五行.水~= 0 then
        if 挨打方五行.火~=nil and 挨打方五行.火~=0 then
            攻击方结果=攻击方结果+攻击方五行.水*挨打方五行.火
        end
        if 挨打方五行.土~=nil and 挨打方五行.土~=0 then
            挨打方结果=挨打方结果+挨打方五行.土*攻击方五行.水
        end
    end
    if 攻击方五行.火~=nil and 攻击方五行.火~= 0 then
        if 挨打方五行.金~=nil and 挨打方五行.金~=0 then
            攻击方结果=攻击方结果+攻击方五行.火*挨打方五行.金
        end
        if 挨打方五行.水~=nil and 挨打方五行.水~=0 then
            挨打方结果=挨打方结果+挨打方五行.水*攻击方五行.火
        end
    end
    if 攻击方五行.土~=nil and 攻击方五行.土~= 0 then
        if 挨打方五行.水~=nil and 挨打方五行.水~=0 then
            攻击方结果=攻击方结果+攻击方五行.土*挨打方五行.水
        end
        if 挨打方五行.木~=nil and 挨打方五行.木~=0 then
            挨打方结果=挨打方结果+挨打方五行.木*攻击方五行.土
        end
    end
    攻击方结果=攻击方结果-挨打方结果
    if 攻击方结果<0 then
        攻击方结果=0
    end
    return 攻击方结果
end

function 取无属性伤害加成(攻击方,挨打方)
    local 加成= 0.2
    if 攻击方.无属性伤害~=nil and 攻击方.无属性伤害>0 then
        if 挨打方.金 == 0 and 挨打方.木== 0 and 挨打方.水 == 0 and 挨打方.火 == 0 and 挨打方.土 == 0 then
            if 攻击方.金 ~= 0 or 攻击方.木 ~= 0 or 攻击方.水 ~= 0 or 攻击方.火 ~= 0 or 攻击方.土 ~= 0 then
                加成 = 加成 + (1 + 攻击方.无属性伤害 * 0.01 - 挨打方.抗无属性伤害* 0.01 + 0.1)
                --给我炼个 无属性伤害出来
            end
        end
    end
    return 加成
end


function 取强力克系数(攻击方强力克,挨打方五行)
    local 攻击方结果=1
    if 攻击方强力克.强力克金~=nil and 攻击方强力克.强力克金~= 0 then
      攻击方结果=攻击方结果+攻击方强力克.强力克金*挨打方五行.金
    end
    if 攻击方强力克.强力克木~=nil and 攻击方强力克.强力克木~= 0 then
      攻击方结果=攻击方结果+攻击方强力克.强力克木*挨打方五行.木
    end
    if 攻击方强力克.强力克水~=nil and 攻击方强力克.强力克水~= 0 then
      攻击方结果=攻击方结果+攻击方强力克.强力克水*挨打方五行.水
    end
    if 攻击方强力克.强力克火~=nil and 攻击方强力克.强力克火~= 0 then
      攻击方结果=攻击方结果+攻击方强力克.强力克火*挨打方五行.火
    end
    if 攻击方强力克.强力克土~=nil and 攻击方强力克.强力克土~= 0 then
      攻击方结果=攻击方结果+攻击方强力克.强力克土*挨打方五行.土
    end
    return 攻击方结果
end

function 生成怪物抗性(数据, 难度)
    local 属性 = 数据
    if not 属性.抗性 then
        属性.抗性 = {}
    end
    local 五行 = 取默认五行(数据.外形)
    for k, v in pairs(五行) do
        属性.抗性[k] = v
    end
    if 难度 == "简单" then
        属性.抗性.物理吸收 = 10
        属性.抗性.抗混乱 = 10
        属性.抗性.抗风 = 5
        属性.抗性.抗水 = 5
        属性.抗性.抗雷 = 5
        属性.抗性.抗火 = 5
        属性.抗性.抗鬼火 = 5
        --物理通用属性
        属性.抗性.连击率 = 10
        属性.抗性.连击次数 = 3
        属性.抗性.狂暴几率 = 5
        属性.抗性.致命几率 = 5
        属性.抗性.抗致命几率 = 0
        属性.抗性.忽视防御几率 = 0
        属性.抗性.忽视防御程度 = 0
        属性.抗性.反击率 = 5
        属性.抗性.反击次数 = 1
    elseif 难度 == "中等" then
        属性.抗性.抗震慑 = 5
        属性.抗性.物理吸收 = 30
        属性.抗性.抗混乱 = 50
        属性.抗性.抗封印 = 25
        属性.抗性.抗遗忘 = 25
        属性.抗性.抗昏睡 = 20
        属性.抗性.抗风 = 10
        属性.抗性.抗水 = 10
        属性.抗性.抗雷 = 10
        属性.抗性.抗火 = 10
        属性.抗性.抗鬼火 = 10
        --物理通用属性
        属性.抗性.连击率 = 15
        属性.抗性.连击次数 = 3
        属性.抗性.狂暴几率 = 10
        属性.抗性.致命几率 = 10
        属性.抗性.抗致命几率 = 10
        属性.抗性.忽视防御几率 = 10
        属性.抗性.忽视防御程度 = 30
        属性.抗性.反击率 = 10
        属性.抗性.反击次数 = 1
    elseif 难度 == "困难" then
        属性.抗性.抗震慑 = 10
        属性.抗性.物理吸收 = 50
        属性.抗性.抗混乱 = 80
        属性.抗性.抗封印 = 40
        属性.抗性.抗遗忘 = 40
        属性.抗性.抗昏睡 = 20
        属性.抗性.抗风 = 15
        属性.抗性.抗水 = 15
        属性.抗性.抗雷 = 15
        属性.抗性.抗火 = 15
        属性.抗性.抗鬼火 = 15
        属性.抗性.躲闪率 = 15
        属性.抗性.抗震慑 = 15
        --物理通用属性
        属性.抗性.连击率 = 20
        属性.抗性.连击次数 = 3
        属性.抗性.狂暴几率 = 15
        属性.抗性.致命几率 = 15
        属性.抗性.抗致命几率 = math.random(15, 30)
        属性.抗性.忽视防御几率 = 15
        属性.抗性.忽视防御程度 = 30
        属性.抗性.反击率 = 15
        属性.抗性.反击次数 = 2
    elseif 难度 == "地狱" then
        属性.抗性.抗震慑 = 20
        属性.抗性.物理吸收 = 90
        属性.抗性.抗混乱 = 110
        属性.抗性.抗封印 = 90
        属性.抗性.抗遗忘 = 60
        属性.抗性.抗昏睡 = 60
        属性.抗性.抗风 = 35
        属性.抗性.抗水 = 35
        属性.抗性.抗雷 = 35
        属性.抗性.抗火 = 35
        属性.抗性.抗鬼火 = 35
        属性.抗性.躲闪率 = 35
        属性.抗性.抗震慑 = 25
        --物理通用属性
        属性.抗性.连击率 = 25
        属性.抗性.连击次数 = 5
        属性.抗性.狂暴几率 = 20
        属性.抗性.致命几率 = 20
        属性.抗性.抗致命几率 = math.random(20, 40)
        属性.抗性.忽视防御几率 = 20
        属性.抗性.忽视防御程度 = 40
        属性.抗性.反击率 = 25
        属性.抗性.反击次数 = 3
    end
    return 属性
end

function 随机种族模型(类型, 转生)
    if 类型 == '男人' then
        local list = { 1, 2, 3, 19, 20, 21 }
        if 转生 >= 1 then
            table.insert(list, 40)
        end
        if 转生 >= 3 then
            table.insert(list, 50)
        end
        return list[math.random(#list)]
    elseif 类型 == '女人' then
        local list = { 4, 5, 6, 22, 23, 24 }
        if 转生 >= 1 then
            table.insert(list, 41)
        end
        if 转生 >= 3 then
            table.insert(list, 51)
        end
        return list[math.random(#list)]
    elseif 类型 == '男魔' then
        local list = { 7, 8, 9, 25, 26, 27 }
        if 转生 >= 1 then
            table.insert(list, 42)
        end
        if 转生 >= 3 then
            table.insert(list, 52)
        end
        return list[math.random(#list)]
    elseif 类型 == '女魔' then
        local list = { 10, 11, 12, 28, 29, 30 }
        if 转生 >= 1 then
            table.insert(list, 43)
        end
        if 转生 >= 3 then
            table.insert(list, 53)
        end
        return list[math.random(#list)]
    elseif 类型 == '男仙' then
        local list = { 13, 14, 15, 31, 32, 33 }
        if 转生 >= 1 then
            table.insert(list, 44)
        end
        if 转生 >= 3 then
            table.insert(list, 54)
        end
        return list[math.random(#list)]
    elseif 类型 == '女仙' then
        local list = { 16, 17, 18, 34, 35, 36 }
        if 转生 >= 1 then
            table.insert(list, 45)
        end
        if 转生 >= 3 then
            table.insert(list, 55)
        end
        return list[math.random(#list)]
    elseif 类型 == '人族' then
        local 男人 = 随机种族模型('男人', 转生)
        local 女人 = 随机种族模型('女人', 转生)
        return math.random(1, 2) == 1 and 男人 or 女人
    elseif 类型 == '魔族' then
        local 男魔 = 随机种族模型('男魔', 转生)
        local 女魔 = 随机种族模型('女魔', 转生)
        return math.random(1, 2) == 1 and 男魔 or 女魔
    elseif 类型 == '仙族' then
        local 男仙 = 随机种族模型('男仙', 转生)
        local 女仙 = 随机种族模型('女仙', 转生)
        return math.random(1, 2) == 1 and 男仙 or 女仙
    end
end

function 取五行克伤害系数(攻击方, 挨打方) --1是克2是被克
    local n = 0
    local 抗性1 = 攻击方
    local 抗性2 = 挨打方
    for i, v in ipairs { '金', '木', '水', '火', '土' } do
        if 抗性1[v] > 0 then
            n = n + (抗性1[v] / 100) * (抗性2[相克[v]] / 100)
        end
    end
    return n
end

local _强力克 = { 强力克金 = '金', 强力克木 = '木', 强力克水 = '水', 强力克火 = '火', 强力克土 = '土' }
function 取强克伤害系数(攻击方, 挨打方)
    local n = 0
    local 抗性1 = 攻击方.抗性
    local 抗性2 = 挨打方
    for i, v in ipairs { '强力克金', '强力克木', '强力克水', '强力克火', '强力克土' } do
        if 抗性1[v] > 0 then
            n = n + 抗性1[v] * (抗性2[_强力克[v]] / 100) * 0.01
        end
    end
    return n
end

function 取震慑强克系数(攻击方, 挨打方, 数额)
    local n = 数额
    local 抗性1 = 攻击方.抗性
    local 抗性2 = 挨打方.抗性
    for i, v in ipairs { '强力克金', '强力克木', '强力克水', '强力克火', '强力克土' } do
        if 抗性1[v] > 0 then
            n = n * (抗性1[v] / 100 * 抗性2[_强力克[v]] / 100)
        end
    end
    return n
end

function 强克伤害加成(攻击方, 挨打方, 伤害)
    local n = 0
    local 五行克 = 取五行克伤害系数(攻击方, 挨打方)
    local 五行被克 = 取五行克伤害系数(挨打方, 攻击方)
    local 强力克 = 取强克伤害系数(攻击方, 挨打方)
    local 五行加成 = (1 + 五行克 * 0.4 - 五行被克 * 0.4)
    强力克 = 强力克 + 攻击方.增加强克效果 * 0.01 - 挨打方.抵御强克效果 * 0.01
    if 强力克 < 0 then
        强力克 = 0
    end
    if 五行加成 < 1 then
        五行加成 = 1
    end
    n = 伤害 * (1 + 强力克) --//强力克
    n = n * 五行加成 --//五行克
    --己方没有 五行 所以不生效
    if 挨打方.金 == 0 and 挨打方.木 == 0 and 挨打方.水 == 0 and 挨打方.火 == 0 and 挨打方.土 == 0 then
        if 攻击方.金 ~= 0 or 攻击方.木 ~= 0 or 攻击方.水 ~= 0 or 攻击方.火 ~= 0 or 攻击方.土 ~= 0 then
            n = n * (1 + 攻击方.无属性伤害 * 0.01 - 挨打方.抗无属性伤害* 0.01 + 0.1)
            --给我炼个 无属性伤害出来
        end
    end
    if n < 1 then
        n = 1
    end
    return math.floor(n)
end

function 内丹系数调整(zhs_zscs, nd_zscs)
    if (zhs_zscs * nd_zscs == 1) then
        return 1.04;
    elseif (zhs_zscs * nd_zscs == 4) then
        return 1.071;
    elseif (zhs_zscs * nd_zscs == 6) then
        return 1.073;
    elseif (zhs_zscs * nd_zscs == 9) then
        return 1.09;
    else
        return 1;
    end
end

function 取开天辟地(攻击方)
    local ndjl = 0
    local r = 攻击方:取内丹("开天辟地")
    if r then
        ndjl =
            math.floor(
                (math.pow(攻击方.等级 * r.等级 * 0.04, 1 / 2) * (1 + 0.25 * r.转生) +
                    (math.pow(攻击方.亲密, 1 / 6) * 内丹系数调整(攻击方.转生, r.转生) * r.等级) / 50) *
                1000
            ) * 0.00001;
        ndjl = math.ceil(ndjl * 10000) / 100
    end
    return ndjl
end

-- 计算器 http://xy2.yzz.cn/jsq2015/xz
-- function 取仙法伤害(类型, 伤害, 攻击方, 挨打方)
--     local 仙法狂暴率 = 0
--     local 仙法狂暴程度 = 0
--     local 仙法加强 = 0
--     local 仙法忽视 = 0
--     if 类型 == '雷' then
--         仙法狂暴率 = 攻击方.雷系狂暴几率 - 挨打方.抗雷法狂暴率
--         仙法狂暴程度 = 攻击方.雷系狂暴程度
--         仙法加强 = 攻击方.加强雷
--         仙法忽视 = 攻击方.忽视抗雷 - 挨打方.抗雷
--     elseif 类型 == '风' then
--         仙法狂暴率 = 攻击方.风系狂暴几率 - 挨打方.抗风法狂暴率
--         仙法狂暴程度 = 攻击方.风系狂暴程度
--         仙法加强 = 攻击方.加强风
--         仙法忽视 = 攻击方.忽视抗风 - 挨打方.抗风
--     elseif 类型 == '火' then
--         仙法狂暴率 = 攻击方.火系狂暴几率 - 挨打方.抗火法狂暴率
--         仙法狂暴程度 = 攻击方.火系狂暴程度
--         仙法加强 = 攻击方.加强火
--         仙法忽视 = 攻击方.忽视抗火 - 挨打方.抗火
--     elseif 类型 == '水' then
--         仙法狂暴率 = 攻击方.水系狂暴几率 - 挨打方.抗水法狂暴率
--         仙法狂暴程度 = 攻击方.水系狂暴程度
--         仙法加强 = 攻击方.加强水
--         仙法忽视 = 攻击方.忽视抗水 - 挨打方.抗水
--     end
--     local 开天辟地 = 取开天辟地(攻击方)
--     伤害 = 伤害 * (1 + (仙法加强 + 仙法忽视 + 开天辟地) * 0.01)

--     伤害 = 强克伤害加成(攻击方, 挨打方, 伤害)

--     -- todo 仙法吸收 *0.8  玄冰甲*0.5

--     挨打方.狂暴 = nil
--     if math.random(100) <= 仙法狂暴率 then
--         伤害 = 伤害 * (1.5 + 仙法狂暴程度 * 0.01)
--         挨打方.狂暴 = "狂暴"
--     end

--     if 攻击方.伤害衰减 then
--         伤害 = 伤害 * (100 - 攻击方.伤害衰减 * 10) * 0.01
--     end

--     if 伤害 <= 0 then
--         伤害 = 1
--     end
--     return math.floor(伤害)
-- end

function 取鬼法伤害(攻击方,挨打方,伤害)
    if 攻击方.ev:忽视抗鬼火(攻击方,挨打方,伤害) then
        伤害 = 伤害 * (1 + (攻击方.加强鬼火 - 挨打方.抗鬼火 + 攻击方.忽视抗鬼火) * 0.01)
    else
        伤害 = 伤害 * (1 + (攻击方.加强鬼火 - 挨打方.抗鬼火 + 攻击方.忽视抗鬼火) * 0.01)
    end
    伤害 = 强克伤害加成(攻击方, 挨打方, 伤害)
    伤害 = 攻击方.ev:取鬼法增加(攻击方,挨打方,伤害) or 伤害
    伤害 = 挨打方.ev:取鬼法减少(挨打方,攻击方,伤害) or 伤害
    return 伤害
end

function 取仙法伤害(类型, 伤害, 攻击方, 挨打方)
    local 类型相关信息 = {
        雷 = {
            狂暴率字段 = "雷系狂暴几率",
            狂暴程度字段 = "雷系狂暴程度",
            加强字段 = "加强雷",
            忽视字段 = "忽视抗雷",
            高级吸收字段 = "天雷甲",
            低级吸收字段 = "雷系吸收",
            护盾字段 = "孩子增益"
        },
        风 = {
            狂暴率字段 = "风系狂暴几率",
            狂暴程度字段 = "风系狂暴程度",
            加强字段 = "加强风",
            忽视字段 = "忽视抗风",
            高级吸收字段 = "狂风甲",
            低级吸收字段 = "风系吸收",
            护盾字段 = "孩子增益"
        },
        火 = {
            狂暴率字段 = "火系狂暴几率",
            狂暴程度字段 = "火系狂暴程度",
            加强字段 = "加强火",
            忽视字段 = "忽视抗火",
            高级吸收字段 = "烈火甲",
            低级吸收字段 = "火系吸收",
            护盾字段 = "孩子增益"
        },
        水 = {
            狂暴率字段 = "水系狂暴几率",
            狂暴程度字段 = "水系狂暴程度",
            加强字段 = "加强水",
            忽视字段 = "忽视抗水",
            高级吸收字段 = "玄冰甲",
            低级吸收字段 = "水系吸收",
            护盾字段 = "孩子增益"
        }
    }
    local 忽视抗仙法 = 攻击方.ev:忽视抗仙法()
    local 仙法 = 类型相关信息[类型]
    local 仙法狂暴率 = 攻击方[仙法.狂暴率字段] - 挨打方["抗" .. 类型 .. "法狂暴率"]

    if 忽视抗仙法 then
        仙法狂暴率 = 攻击方[仙法.狂暴率字段]
    end
    local 仙法狂暴程度 = 攻击方[仙法.狂暴程度字段]
    local 仙法加强 = 攻击方[仙法.加强字段]
    local 仙法忽视 = 攻击方[仙法.忽视字段] - 挨打方["抗" .. 类型]
    if 忽视抗仙法 then
        仙法忽视 = 攻击方[仙法.忽视字段]
    end
    local 高级护盾值 = 挨打方[仙法.护盾字段][仙法.高级吸收字段] and 挨打方[仙法.护盾字段][仙法.高级吸收字段] or 0
    local 低级护盾值 = 挨打方[仙法.护盾字段][仙法.低级吸收字段] and 挨打方[仙法.护盾字段][仙法.低级吸收字段] or 0
    local 护盾总值 = 高级护盾值 + 低级护盾值
    local 开天辟地 = 取开天辟地(攻击方)
    伤害 = 伤害 * (1 + (仙法加强 + 仙法忽视 + 开天辟地) * 0.01)
    伤害 = 强克伤害加成(攻击方, 挨打方, 伤害)
    伤害 = 攻击方.ev:取仙法增加(攻击方,挨打方,伤害) or 伤害
    伤害 = 挨打方.ev:取仙法减少(挨打方,攻击方,伤害) or 伤害
    挨打方.狂暴 = nil
    if math.random(100) <= 仙法狂暴率 then
        伤害 = 伤害 * (1.5 + 仙法狂暴程度 * 0.01)
        挨打方.狂暴 = "狂暴"
    end

    伤害 = 伤害 * (100 - (攻击方.伤害衰减 or 0) * 10) * 0.01

    伤害 = 伤害 * 3

    伤害 = math.max(伤害, 1)

    if 护盾总值 >= 伤害 then
        local 减少护盾值 = math.min(伤害, 高级护盾值)
        高级护盾值 = 高级护盾值 - 减少护盾值
        if 减少护盾值 < 伤害 then
            低级护盾值 = 低级护盾值 - (伤害 - 减少护盾值)
            高级护盾值 = 0
        end
        伤害 = 0
    else
        伤害 = 伤害 - 护盾总值
        高级护盾值 = 0
        低级护盾值 = 0
    end

    if 挨打方[仙法.护盾字段][仙法.高级吸收字段] then
        挨打方:触发孩子喊话('看我的#G' .. 仙法.高级吸收字段 .. '#46')
        挨打方[仙法.护盾字段][仙法.高级吸收字段] = 高级护盾值
    end

    if 挨打方[仙法.护盾字段][仙法.低级吸收字段] then
        挨打方:触发孩子喊话('看我的#G' .. 仙法.低级吸收字段 .. '#46')
        挨打方[仙法.护盾字段][仙法.低级吸收字段] = 低级护盾值
    end
    return math.floor(伤害)
end

function 取震慑伤害(震慑, 攻击方, 挨打方) --直接这里统一就完了 涉及的都生效咯嗯 你弄
    local 震慑忽视 = 攻击方.忽视抗震慑 - 挨打方.抗震慑
    local 震慑加强 = 攻击方.加强震慑
    震慑 = (震慑 + 震慑忽视) * (1 + 震慑加强 * 0.01)

    震慑 = 强克伤害加成(攻击方, 挨打方, 震慑)

    if 震慑 > 55 then
        震慑 = 55
    end

    挨打方.狂暴 = nil
    -- 挨打方:减少魔法(扣蓝)
    local 伤害 = math.floor(挨打方.气血 * 震慑 * 0.01)
    if 挨打方.抗震慑气血 and 挨打方.抗震慑气血 > 0 then
        伤害 = math.floor(伤害*挨打方.抗震慑气血/100)
    end
    if 伤害 <= 0 then
        伤害 = 1
    end
    return 伤害
end

function 取中毒伤害(伤害, 攻击方, 挨打方)
    伤害 = 伤害 * (1 + 攻击方.忽视抗毒 * 0.01 - 挨打方.抗中毒 * 0.01)
    伤害 = 强克伤害加成(攻击方, 挨打方, 伤害)
    伤害 = 伤害 * (1 + 攻击方.加强毒 / 100) + 攻击方.加强毒伤害 - 挨打方.抗毒伤害
    挨打方.狂暴 = nil
    伤害 = 攻击方.ev:取毒法增加(攻击方, 挨打方,伤害) or 伤害
    if 伤害 <= 0 then
        伤害 = 2.5
    end
    return math.floor(伤害)
end

function 取人法几率(类型, 几率, 攻击方, 挨打方)
    local 人法加强 = 0
    local 人法忽视 = 0
    if 类型 == '混乱' then
        人法加强 = 攻击方.加强混乱
        人法忽视 = 攻击方.忽视抗混 - 挨打方.抗混乱
    elseif 类型 == '封印' then
        人法加强 = 攻击方.加强封印
        人法忽视 = 攻击方.忽视抗封 - 挨打方.抗封印
    elseif 类型 == '昏睡' then
        人法加强 = 攻击方.加强昏睡
        人法忽视 = 攻击方.忽视抗睡 - 挨打方.抗昏睡
    end
    几率 = (几率 + 人法忽视) * (1 + 人法加强 * 0.01)
    几率 = 几率 * math.random(70, 100) * 0.01
    if 几率 <= 0 then
        几率 = 1 -- 最低保留1%的概率
    end
    return 几率
end

function 坐骑任务检查(玩家, 引导, 几坐)
    -- 是否有坐骑剧情引导
    local 剧情任务 = 玩家:取任务(引导)
    if 剧情任务 then
        剧情任务:完成(玩家)

        玩家:添加任务(生成任务 { 名称 = 几坐, 进度 = 0, 对话进度 = 0 })
        return true
    end
    return false
end

function SkillXS(v, xs)
    if v <= 0 then
        return 0
    end
    while v / 16 > 0 do
        v = math.floor(v / 16)
        xs = xs * 1.86
    end
    xs = xs * (1 + 0.86 * (v / 16.0))
    -- 使用Lua的标准库进行舍入
    local mult = 100  -- 舍入到小数点后两位
    xs = math.floor(xs * mult + 0.5) / mult
    return xs
end
