local _ENV = require('数据库/装备属性_共用')

local _护身符黄字属性 = {
    { 类型 = "速度", 满属性基础 = 10 }, --7级满42 6级满36 5级满 30  每等级满属性=等级*6
    { 类型 = "敏捷", 满属性基础 = 10 }, --7级满63 6级满54 5级满 45  每等级满属性=等级*9
    { 类型 = "附加气血", 满属性基础 = 400 }, --7级满2800 6级满2400 5级满2000  每等级满属性=等级*400
    { 类型 = "附加魔法", 满属性基础 = 400 }, --7级满2800 6级满2400 5级满2000  每等级满属性=等级*400
    { 类型 = "附加攻击", 满属性基础 = 700 }, --7级满6300 6级满5400 5级满 4500  每等级满属性=等级*900
    { 类型 = "增加强克效果", 满属性基础 = 3 }, --7级满21 6级满18 5级满 15  每等级满属性=等级*3
    { 类型 = "抵御强克效果", 满属性基础 = 2 }, --7级满14 6级满12 5级满10  每等级满属性=等级*2
    { 类型 = "无属性伤害", 满属性基础 = 2 }, --7级满14 6级满12 5级满10  每等级满属性=等级*2
    { 类型 = "抗无属性伤害", 满属性基础 = 2.5 }, --7级满17.5 6级满15 5级满12.5  每等级满属性=等级*2.5
    -- { 类型 = "抗震慑气血", 满属性基础 = 3 }, --7级满21 6级满18 5级满15  每等级满属性=等级*3
    -- { 类型 = "抗震慑魔法", 满属性基础 = 5 }, --7级满35 6级满30 5级满25  每等级满属性=等级*5
    { 类型 = "四抗上限", 满属性基础 = 0.8 }, --7级满5.6 6级满4.5 5级满4  每等级满属性=等级*0.8
    { 类型 = "抗遗忘上限", 满属性基础 = 1 }, --7级满7 6级满6 5级满5  每等级满属性=等级*1
    { 类型 = "抗混乱上限", 满属性基础 = 1 }, --7级满7 6级满6 5级满5  每等级满属性=等级*1
    { 类型 = "抗封印上限", 满属性基础 = 1 }, --7级满7 6级满6 5级满5  每等级满属性=等级*1
    { 类型 = "抗昏睡上限", 满属性基础 = 1 }, --7级满7 6级满6 5级满5  每等级满属性=等级*1
    -- { 类型 = "对召唤兽伤害", 满属性基础 = 3 },--7级满21 6级满18 5级满15  每等级满属性=等级*3
    -- { 类型 = "抗金箍", 满属性基础 = 1.6 },--7级满11.2 6级满9.6 5级满8  每等级满属性=等级*1.6
    -- { 类型 = "抗情网", 满属性基础 = 1.6 },--7级满11.2 6级满9.6 5级满8  每等级满属性=等级*1.6
    { 类型 = "尘埃落定", 满属性基础 = 1000 }, --7级满7000 6级满6000 5级满5000  每等级满属性=等级*1000
    { 类型 = "化血成碧", 满属性基础 = 1000 }, --7级满7000 6级满6000 5级满5000  每等级满属性=等级*1000
    { 类型 = "上善若水", 满属性基础 = 1000 }, --7级满7000 6级满6000 5级满5000  每等级满属性=等级*1000
    { 类型 = "灵犀一点", 满属性基础 = 1000 }, --7级满7000 6级满6000 5级满5000  每等级满属性=等级*1000
    { 类型 = "明珠有泪", 满属性基础 = 1000 }, --7级满7000 6级满6000 5级满5000  每等级满属性=等级*1000
    { 类型 = "美人迟暮", 满属性基础 = 1000 }, --7级满7000 6级满6000 5级满5000  每等级满属性=等级*1000

}
local _护身符绿字属性 = {
    { 类型 = "命中率", 满属性基础 = 3 }, --满属性=等级*3
    { 类型 = "强力克金", 满属性基础 = 3 }, --满属性=等级*3
    { 类型 = "强力克木", 满属性基础 = 3 }, --满属性=等级*3
    { 类型 = "强力克水", 满属性基础 = 3 }, --满属性=等级*3
    { 类型 = "强力克火", 满属性基础 = 3 }, --满属性=等级*3
    { 类型 = "强力克土", 满属性基础 = 3 }, --满属性=等级*3
    { 类型 = "加强遗忘", 满属性基础 = 0.8 }, --满属性=等级*0.8
    { 类型 = "加强混乱", 满属性基础 = 0.8 }, --满属性=等级*0.8
    { 类型 = "加强昏睡", 满属性基础 = 0.8 }, --满属性=等级*0.8
    { 类型 = "加强封印", 满属性基础 = 0.8 }, --满属性=等级*0.8
    { 类型 = "每回合MP", 满属性基础 = 25 }, --满属性=等级*25
    { 类型 = "加强鬼火", 满属性基础 = 1.5 }, --满属性=等级*1.5
    { 类型 = "加强水", 满属性基础 = 1.5 }, --满属性=等级*1.5
    { 类型 = "加强火", 满属性基础 = 1.5 }, --满属性=等级*1.5
    { 类型 = "加强风", 满属性基础 = 1.5 }, --满属性=等级*1.5
    { 类型 = "加强雷", 满属性基础 = 1.5 }, --满属性=等级*1.5
    { 类型 = "强仙法", 满属性基础 = 0.7 }, --满属性=等级*0.7
    { 类型 = "忽视抗鬼火", 满属性基础 = 0.8 }, --满属性=等级*0.8
    { 类型 = "忽视抗水", 满属性基础 = 0.8 }, --满属性=等级*0.8
    { 类型 = "忽视抗火", 满属性基础 = 0.8 }, --满属性=等级*0.8
    { 类型 = "忽视抗风", 满属性基础 = 0.8 }, --满属性=等级*0.8
    { 类型 = "忽视抗雷", 满属性基础 = 0.8 }, --满属性=等级*0.8
    { 类型 = "忽视仙法", 满属性基础 = 0.6 }, --满属性=等级*0.6
    { 类型 = "加强毒伤害", 满属性基础 = 2.5 }, --满属性=等级*2.5
    { 类型 = "加强震慑", 满属性基础 = 0.6 }, --满属性=等级*0.6
    { 类型 = "忽视抗震慑", 满属性基础 = 0.3 }, --满属性=等级*0.3
    { 类型 = "加强三尸虫", 满属性基础 = 100 }, --满属性=等级*100
    { 类型 = "风系狂暴几率", 满属性基础 = 0.8 }, --满属性=等级*0.8
    { 类型 = "水系狂暴几率", 满属性基础 = 0.8 }, --满属性=等级*0.8
    { 类型 = "雷系狂暴几率", 满属性基础 = 0.8 }, --满属性=等级*0.8
    { 类型 = "火系狂暴几率", 满属性基础 = 0.8 }, --满属性=等级*0.8
    { 类型 = "鬼火狂暴几率", 满属性基础 = 1 }, --满属性=等级*1
    { 类型 = "鬼火狂暴程度", 满属性基础 = 1 }, --满属性=等级*1
    { 类型 = "三尸虫狂暴几率", 满属性基础 = 1 }, --满属性=等级*1
    { 类型 = "三尸虫狂暴程度", 满属性基础 = 1 }, --满属性=等级*1
    { 类型 = "加强三尸虫回血程度", 满属性基础 = 2 }, --满属性=等级*2
    { 类型 = "忽视抗遗忘", 满属性基础 = 0.2 }, --满属性=等级*0.4
    { 类型 = "忽视抗混", 满属性基础 = 0.2 }, --满属性=等级*0.4
    { 类型 = "忽视抗封", 满属性基础 = 0.2 }, --满属性=等级*0.4
    { 类型 = "忽视抗睡", 满属性基础 = 0.2 }, --满属性=等级*0.4
    { 类型 = "忽视抗毒", 满属性基础 = 0.2 }, --满属性=等级*0.4
}

local _护符等级限制 = {
    { 60, 0 },
    { 60, 0 },
    { 60, 0 },
    { 60, 0 },
    { 60, 0 },
    { 60, 0 },
    { 60, 0 },
    { 60, 0 },
}

if __config.种族 ==  4 or __config.种族 == 4.1 then
    _护身符黄字属性 = {
        { 类型 = "速度", 满属性基础 = 10 }, -- 7级满42 6级满36 5级满 30  每等级满属性=等级*6
        { 类型 = "敏捷", 满属性基础 = 10 }, -- 7级满63 6级满54 5级满 45  每等级满属性=等级*9
        { 类型 = "附加气血", 满属性基础 = 400 }, -- 7级满2800 6级满2400 5级满2000  每等级满属性=等级*400
        { 类型 = "附加魔法", 满属性基础 = 400 }, -- 7级满2800 6级满2400 5级满2000  每等级满属性=等级*400
        { 类型 = "附加攻击", 满属性基础 = 700 }, -- 7级满6300 6级满5400 5级满 4500  每等级满属性=等级*900
        { 类型 = "增加强克效果", 满属性基础 = 3 }, -- 7级满21 6级满18 5级满 15  每等级满属性=等级*3
        { 类型 = "抵御强克效果", 满属性基础 = 2 }, -- 7级满14 6级满12 5级满10  每等级满属性=等级*2
        { 类型 = "无属性伤害", 满属性基础 = 2 }, -- 7级满14 6级满12 5级满10  每等级满属性=等级*2
        { 类型 = "抗无属性伤害", 满属性基础 = 2.5 }, -- 7级满17.5 6级满15 5级满12.5  每等级满属性=等级*2.5
        -- { 类型 = "抗震慑气血", 满属性基础 = 3 }, -- 7级满21 6级满18 5级满15  每等级满属性=等级*3
        -- { 类型 = "抗震慑魔法", 满属性基础 = 5 }, -- 7级满35 6级满30 5级满25  每等级满属性=等级*5
        { 类型 = "四抗上限", 满属性基础 = 0.8 }, -- 7级满5.6 6级满4.5 5级满4  每等级满属性=等级*0.8
        { 类型 = "抗遗忘上限", 满属性基础 = 1 }, -- 7级满7 6级满6 5级满5  每等级满属性=等级*1
        { 类型 = "抗混乱上限", 满属性基础 = 1 }, -- 7级满7 6级满6 5级满5  每等级满属性=等级*1
        { 类型 = "抗封印上限", 满属性基础 = 1 }, -- 7级满7 6级满6 5级满5  每等级满属性=等级*1
        { 类型 = "抗昏睡上限", 满属性基础 = 1 }, -- 7级满7 6级满6 5级满5  每等级满属性=等级*1
        -- { 类型 = "对召唤兽伤害", 满属性基础 = 3 }, -- 7级满21 6级满18 5级满15  每等级满属性=等级*3
        -- { 类型 = "抗金箍", 满属性基础 = 1.6 }, -- 7级满11.2 6级满9.6 5级满8  每等级满属性=等级*1.6
        -- { 类型 = "抗情网", 满属性基础 = 1.6 }, -- 7级满11.2 6级满9.6 5级满8  每等级满属性=等级*1.6
        { 类型 = "尘埃落定", 满属性基础 = 1000 }, -- 7级满7000 6级满6000 5级满5000  每等级满属性=等级*1000
        { 类型 = "化血成碧", 满属性基础 = 1000 }, -- 7级满7000 6级满6000 5级满5000  每等级满属性=等级*1000
        { 类型 = "上善若水", 满属性基础 = 1000 }, -- 7级满7000 6级满6000 5级满5000  每等级满属性=等级*1000
        { 类型 = "灵犀一点", 满属性基础 = 1000 }, -- 7级满7000 6级满6000 5级满5000  每等级满属性=等级*1000
        { 类型 = "明珠有泪", 满属性基础 = 1000 }, -- 7级满7000 6级满6000 5级满5000  每等级满属性=等级*1000
        { 类型 = "美人迟暮", 满属性基础 = 1000 }, -- 7级满7000 6级满6000 5级满5000  每等级满属性=等级*1000

    }
    _护身符绿字属性 = {
        { 类型 = "命中率", 满属性基础 = 3 }, -- 满属性=等级*3
        { 类型 = "强力克金", 满属性基础 = 3 }, -- 满属性=等级*3
        { 类型 = "强力克木", 满属性基础 = 3 }, -- 满属性=等级*3
        { 类型 = "强力克水", 满属性基础 = 3 }, -- 满属性=等级*3
        { 类型 = "强力克火", 满属性基础 = 3 }, -- 满属性=等级*3
        { 类型 = "强力克土", 满属性基础 = 3 }, -- 满属性=等级*3
        { 类型 = "加强遗忘", 满属性基础 = 0.8 }, -- 满属性=等级*0.8
        { 类型 = "加强混乱", 满属性基础 = 0.8 }, -- 满属性=等级*0.8
        { 类型 = "加强昏睡", 满属性基础 = 0.8 }, -- 满属性=等级*0.8
        { 类型 = "加强封印", 满属性基础 = 0.8 }, -- 满属性=等级*0.8
        { 类型 = "每回合MP", 满属性基础 = 25 }, -- 满属性=等级*25
        { 类型 = "加强鬼火", 满属性基础 = 1.5 }, -- 满属性=等级*1.5
        { 类型 = "加强水", 满属性基础 = 1.5 }, -- 满属性=等级*1.5
        { 类型 = "加强火", 满属性基础 = 1.5 }, -- 满属性=等级*1.5
        { 类型 = "加强风", 满属性基础 = 1.5 }, -- 满属性=等级*1.5
        { 类型 = "加强雷", 满属性基础 = 1.5 }, -- 满属性=等级*1.5
        { 类型 = "强仙法", 满属性基础 = 0.7 }, -- 满属性=等级*0.7
        { 类型 = "忽视抗鬼火", 满属性基础 = 0.8 }, -- 满属性=等级*0.8
        { 类型 = "忽视抗水", 满属性基础 = 0.8 }, -- 满属性=等级*0.8
        { 类型 = "忽视抗火", 满属性基础 = 0.8 }, -- 满属性=等级*0.8
        { 类型 = "忽视抗风", 满属性基础 = 0.8 }, -- 满属性=等级*0.8
        { 类型 = "忽视抗雷", 满属性基础 = 0.8 }, -- 满属性=等级*0.8
        { 类型 = "忽视仙法", 满属性基础 = 0.6 }, -- 满属性=等级*0.6
        { 类型 = "加强毒伤害", 满属性基础 = 2.5 }, -- 满属性=等级*2.5
        { 类型 = "加强震慑", 满属性基础 = 0.6 }, -- 满属性=等级*0.6
        { 类型 = "忽视抗震慑", 满属性基础 = 0.3 }, -- 满属性=等级*0.3
        { 类型 = "加强三尸虫", 满属性基础 = 100 }, -- 满属性=等级*100
        { 类型 = "风系狂暴几率", 满属性基础 = 0.8 }, -- 满属性=等级*0.8
        { 类型 = "水系狂暴几率", 满属性基础 = 0.8 }, -- 满属性=等级*0.8
        { 类型 = "雷系狂暴几率", 满属性基础 = 0.8 }, -- 满属性=等级*0.8
        { 类型 = "火系狂暴几率", 满属性基础 = 0.8 }, -- 满属性=等级*0.8
        { 类型 = "鬼火狂暴几率", 满属性基础 = 1 }, -- 满属性=等级*1
        { 类型 = "鬼火狂暴程度", 满属性基础 = 1 }, -- 满属性=等级*1
        { 类型 = "三尸虫狂暴几率", 满属性基础 = 1 }, -- 满属性=等级*1
        { 类型 = "三尸虫狂暴程度", 满属性基础 = 1 }, -- 满属性=等级*1
        { 类型 = "加强三尸虫回血程度", 满属性基础 = 2 }, -- 满属性=等级*2
        { 类型 = "忽视抗遗忘", 满属性基础 = 0.2 }, -- 满属性=等级*0.4
        { 类型 = "忽视抗混", 满属性基础 = 0.2 }, -- 满属性=等级*0.4
        { 类型 = "忽视抗封", 满属性基础 = 0.2 }, -- 满属性=等级*0.4
        { 类型 = "忽视抗睡", 满属性基础 = 0.2 }, -- 满属性=等级*0.4
        { 类型 = "忽视抗毒", 满属性基础 = 0.2 }, -- 满属性=等级*0.4
    }
    _护符等级限制 = {
        { 60, 0 },
        { 60, 0 },
        { 60, 0 },
        { 60, 0 },
        { 60, 0 },
        { 60, 0 },
        { 60, 0 },
        { 60, 0 },
    }

end

local _护身符名称 = { '久雨初晴', '岁寒松柏', '梅花占魁', '鹍鸟化鹏', '福慧双修', '天地交泰', '红日当空', }

local function 取是否存在(t, n)
    for i, v in pairs(t) do
        if v == n then
            return true
        end
    end
end

return {
    取佩饰等级需求 = function(级别)
        return _护符等级限制[级别]
    end,

    取基础属性 = function(级别, 品质) --2条
        品质 = 品质 or 200
        local list = {}
        local 属性 = 随机表(_护身符黄字属性)
        local 属性2 = 随机表(_护身符黄字属性)

        while 属性 == 属性2 do
            属性2 = 随机表(_护身符黄字属性)
        end
        if _整数范围[属性.类型] then
            local n = math.floor(属性.满属性基础 * 级别 * 品质 / 1000)
            table.insert(list, { 属性.类型, n, 属性.满属性基础 })
        else
            local n = math.floor(属性.满属性基础 * 级别 * 品质 / 100) * 0.1
            if n * 10 < 1 then
                n = 0.1
            end
            table.insert(list, { 属性.类型, n, 属性.满属性基础 })
        end

        if _整数范围[属性2.类型] then
            local n = math.floor(属性2.满属性基础 * 级别 * 品质 / 1000)
            table.insert(list, { 属性2.类型, n, 属性2.满属性基础 })
        else
            local n = math.floor(属性2.满属性基础 * 级别 * 品质 / 100) * 0.1
            if n * 10 < 1 then
                n = 0.1
            end
            table.insert(list, { 属性2.类型, n, 属性2.满属性基础 })
        end

        return list
    end,
    取附加抗性 = function(级别, 品质) --随机1-3条
        品质 = 品质 or 200
        local list = {}
        local ts = math.random(3)
        if math.random(100) < 10 then
            ts = 2
        elseif math.random(100) < 70 then
            ts = 1
        else
            ts = 3
        end
        local t = {}
        while #t < 3 do
            local n = math.random(#_护身符绿字属性)
            if not 取是否存在(t, n) then
                table.insert(t, n)
            end
        end


        for i, v in ipairs(t) do
            if i <= ts then
                local 属性 = _护身符绿字属性[v]
                if 属性 then
                    if _整数范围[属性.类型] then
                        local n = math.floor(属性.满属性基础 * 级别 * 品质 / 1000)
                        table.insert(list, { 属性.类型, n, 属性.满属性基础 })
                    else
                        local n = math.floor(属性.满属性基础 * 级别 * 品质 / 100) * 0.1
                        if n * 10 < 1 then
                            n = 0.1
                        end
                        table.insert(list, { 属性.类型, n, 属性.满属性基础 })
                    end
                end
            end
        end
        return list
    end,
    取升级名称 = function(n)
        return _护身符名称[n]
    end,
    取升级属性 = function(级别, 品质, 基本, 附加)
        品质 = 品质 or 200
        local 基本属性 = {}
        local 附加属性 = {}
        for k, v in pairs(基本) do
            for _k, _v in pairs(_护身符黄字属性) do
                if _v.类型 == v[1] then
                    local 属性 = _v
                    if _整数范围[属性.类型] then
                        local n = math.floor(属性.满属性基础 * 级别 * 品质 / 1000)
                        table.insert(基本属性, { 属性.类型, n, 属性.满属性基础 })
                    else
                        local n = math.floor(属性.满属性基础 * 级别 * 品质 / 100) * 0.1
                        if n * 10 < 1 then
                            n = 0.1
                        end
                        table.insert(基本属性, { 属性.类型, n, 属性.满属性基础 })
                    end
                end
            end
        end

        for k, v in pairs(附加) do
            for _k, _v in pairs(_护身符绿字属性) do
                if _v.类型 == v[1] then
                    local 属性 = _v
                    if _整数范围[属性.类型] then
                        local n = math.floor(属性.满属性基础 * 级别 * 品质 / 1000)
                        table.insert(附加属性, { 属性.类型, n, 属性.满属性基础 })
                    else
                        local n = math.floor(属性.满属性基础 * 级别 * 品质 / 100) * 0.1
                        if n * 10 < 1 then
                            n = 0.1
                        end
                        table.insert(附加属性, { 属性.类型, n, 属性.满属性基础 })
                    end
                end
            end
        end

        return 基本属性, 附加属性
    end,
}
