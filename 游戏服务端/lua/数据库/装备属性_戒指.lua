local _ENV = require('数据库/装备属性_共用')



---戒指  --力量要求附加攻击必带为例吸收
--顺序 1+属性点/2+附加  双加
local _戒指附加范围 = { "力量", "根骨", "灵性", "敏捷", "速度", "抗毒伤害" }
local _戒指抗性_通用 = {
    根骨 = { 10, 20, 30, 40, 50, 60, 70 },
    力量 = { 10, 20, 30, 40, 50, 60, 70 },
    灵性 = { 10, 20, 30, 40, 50, 60, 70 },
    敏捷 = { 10, 20, 30, 40, 50, 60, 70 },
    附加气血 = { 600, 1000, 1400, 1800, 2200, 2600, 3000 }, --已修改
    附加攻击 = { 600, 800, 1000, 1200, 1400, 1600, 1800 }, --已修改
    物理吸收 = { 1, 2, 3, 4, 6, 8, 10 }, --已修改
}
local _戒指抗性_敏捷 = {
    根骨 = { 10, 20, 30, 40, 50, 60, 70 },
    力量 = { 10, 20, 30, 40, 50, 60, 70 },
    灵性 = { 4, 8, 12, 16, 20, 24, 70 }, ---修改
    敏捷 = { 10, 20, 30, 40, 50, 60, 70 },
    附加气血 = { 200, 400, 600, 800, 1000, 1200, 1400 }, ---已修改
}

local _戒指属性_属性点 = {
    根骨 = { 10, 20, 30, 40, 50, 60, 70 },
    力量 = { 10, 20, 30, 40, 50, 60, 70 },
    灵性 = { 4, 8, 12, 16, 20, 24, 70 }, ---修改
    敏捷 = { 4, 8, 12, 16, 20, 24, 70 }, ---修改
    --敏捷={10,20,30,40,50,60,70},
}
local _戒指属性_附加 = {
    力量 = { 6, 8, 10, 12, 14, 16, 17 }, --已修改
    根骨 = { 6, 8, 10, 12, 14, 16, 17 }, --已修改
    灵性 = { 6, 8, 10, 12, 14, 16, 17 }, --已修改
    敏捷 = { 6, 8, 10, 12, 14, 16, 17 }, --已修改
    速度 = { 17, 19, 21, 24, 27, 30, 33 }, ----已修改
    抗毒伤害 = { 1264, 1788, 2530, 3098, 3578, 4000, 4382 }, --已修改
    -------------物理吸收={500,920,1340,1760,2180,2600,3120},--待修改

}

local _戒指名称 = { '灵草戒指', '盘古之戒', '黑木戒指', '珊瑚瓣', '冥灵戒指', '血瓷戒指',
    '翠玉扳指' }






return {
    取佩饰等级需求 = function(级别)
        return 取佩饰等级需求(级别)
    end,
    取佩饰属性需求 = function(级别)
        return 取佩饰属性需求(级别)
    end,
    取基础属性 = function(级别, 属性要求)
        local list = {}
        local 属性 = 随机表(_属性范围)
        local n = _戒指属性_属性点[属性要求][级别]
        table.insert(list, { 属性, n })
        if 属性要求 == "力量" then
            n = _戒指抗性_通用.附加攻击[级别]
            table.insert(list, { "附加攻击", n })
            n = _戒指抗性_通用.物理吸收[级别]
            table.insert(list, { "物理吸收", n })
        elseif 属性要求 == "敏捷" then
            n = _戒指抗性_敏捷.附加气血[级别]
            table.insert(list, { "附加气血", n })
        else
            n = _戒指抗性_通用.附加气血[级别]
            table.insert(list, { "附加气血", n })
        end
        return list
    end,
    取附加抗性 = function(级别)
        local list = {}
        local 属性 = 随机表(_戒指附加范围)
        local n = _戒指属性_附加[属性][级别]
        if _整数范围[属性] then
            table.insert(list, { 属性, math.ceil(n * 0.01), n })
        else
            table.insert(list, { 属性, math.ceil(n * 0.1) * 0.1, n })
        end
        local 属性2 = 随机表(_戒指附加范围)

        while 属性 == 属性2 do
            属性2 = 随机表(_戒指附加范围)
        end
        n = _戒指属性_附加[属性2][级别]
        if _整数范围[属性2] then
            table.insert(list, { 属性2, math.ceil(n * 0.01), n })
        else
            table.insert(list, { 属性2, math.ceil(n * 0.1) * 0.1, n })
        end
        return list
    end,

    取升级名称 = function(n, 性别)
        return _戒指名称[n]
    end,
    取升级佩饰等级需求 = function(级别, 属性要求)
        return 取升级佩饰等级需求(级别, 属性要求)
    end,
    取升级佩饰属性需求 = function(级别, 属性要求)
        return 取升级佩饰属性需求(级别, 属性要求)
    end,
    取升级属性 = function(t, 附加, 级别, 属性要求)
        local 基本属性 = {}
        local 附加属性 = {}
        local 属性 = t[1][1]
        local n = _戒指属性_属性点[属性要求][级别]
        table.insert(基本属性, { 属性, n })

        if 属性要求 == "力量" then
            n = _戒指抗性_通用.附加攻击[级别]
            table.insert(基本属性, { "附加攻击", n })
            n = _戒指抗性_通用.物理吸收[级别]
            table.insert(基本属性, { "物理吸收", n })
        elseif 属性要求 == "敏捷" then
            n = _戒指抗性_敏捷.附加气血[级别]
            table.insert(基本属性, { "附加气血", n })
        else
            n = _戒指抗性_通用.附加气血[级别]



            print(n)
            table.insert(基本属性, { "附加气血", n })
        end

        属性 = 附加[1][1]
        local n = _戒指属性_附加[属性][级别]
        if _整数范围[属性] then
            table.insert(附加属性, { 属性, math.ceil(n * 0.01), n })
        else
            table.insert(附加属性, { 属性, math.ceil(n * 0.1) * 0.1, n })
        end
        属性 = 附加[2][1]
        local n = _戒指属性_附加[属性][级别]
        if _整数范围[属性] then
            table.insert(附加属性, { 属性, math.ceil(n * 0.01), n })
        else
            table.insert(附加属性, { 属性, math.ceil(n * 0.1) * 0.1, n })
        end


        return 基本属性, 附加属性
    end,













}
